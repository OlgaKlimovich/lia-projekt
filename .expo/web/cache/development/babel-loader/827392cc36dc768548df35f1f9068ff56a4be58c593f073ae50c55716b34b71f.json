{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  return _jsxs(\"modula\", {\n    style: style.loginContainer,\n    children: [_jsx(TextInput, {\n      style: style.textFieldStyle,\n      placeholder: \"Anv\\xE4ndarnamn\",\n      value: username,\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      }\n    }), _jsx(TextInput, {\n      style: style.textFieldStyle,\n      placeholder: \"L\\xF6senord\",\n      value: password,\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(Button, {\n      style: style.loginButton,\n      title: \"Logga in\",\n      onPress: function onPress() {\n        return console.log(\"login attempt\");\n      }\n    })]\n  });\n}\nvar style = StyleSheet.create({\n  textFieldStyle: {\n    flexDirection: \"row\",\n    backgroundColor: \"#afafaf\",\n    marginTop: 5,\n    width: \"80%\",\n    alignSelf: \"center\",\n    padding: 15\n  },\n  loginButton: {\n    maxWidth: 40,\n    backgroundColor: \"yellow\",\n    color: \"black\"\n  },\n  loginContainer: {\n    alignSelf: \"center\",\n    alignContent: \"center\",\n    width: 250,\n    backgroundColor: \"yellow\"\n  }\n});","map":{"version":3,"names":["React","useState","LoginScreen","username","setUsername","password","setPassword","style","loginContainer","textFieldStyle","text","loginButton","console","log","StyleSheet","create","flexDirection","backgroundColor","marginTop","width","alignSelf","padding","maxWidth","color","alignContent"],"sources":["C:/Users/oklim/cleansupportapp/lia-projekt/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { TextInput, View, StyleSheet, Button, Alert } from \"react-native\";\n\n\n\n\nexport default function LoginScreen() {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    return (\n        <modula\n            style={style.loginContainer}>\n            <TextInput\n                style={style.textFieldStyle}\n                placeholder=\"Användarnamn\"\n                value={username}\n                onChangeText={(text) => setUsername(text)}\n            />\n            <TextInput\n                style={style.textFieldStyle}\n                placeholder=\"Lösenord\"\n                value={password}\n                secureTextEntry={true}\n                onChangeText={(text) => setPassword(text)} />\n\n            <Button\n                style={style.loginButton}\n                title=\"Logga in\"\n                onPress={() => console.log(\"login attempt\")}\n            ></Button>\n\n        </modula>\n    );\n}\n\nconst style = StyleSheet.create({\n    textFieldStyle: {\n        flexDirection: \"row\",\n        backgroundColor: \"#afafaf\",\n        marginTop: 5,\n        width: \"80%\",\n        alignSelf: \"center\",\n        padding: 15,\n    },\n    loginButton: {\n        maxWidth: 40,\n        backgroundColor: \"yellow\",\n        color: \"black\"\n    },\n    loginContainer: {\n        alignSelf: \"center\",\n        alignContent: \"center\",\n        width: 250,\n        backgroundColor: \"yellow\"\n    }\n})"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMxC,eAAe,SAASC,WAAW,GAAG;EAElC,gBAAgCD,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCE,QAAQ;IAAEC,WAAW;EAC5B,iBAAgCH,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCI,QAAQ;IAAEC,WAAW;EAE5B,OACI;IACI,KAAK,EAAEC,KAAK,CAACC,cAAe;IAAA,WAC5B,KAAC,SAAS;MACN,KAAK,EAAED,KAAK,CAACE,cAAe;MAC5B,WAAW,EAAC,iBAAc;MAC1B,KAAK,EAAEN,QAAS;MAChB,YAAY,EAAE,sBAACO,IAAI;QAAA,OAAKN,WAAW,CAACM,IAAI,CAAC;MAAA;IAAC,EAC5C,EACF,KAAC,SAAS;MACN,KAAK,EAAEH,KAAK,CAACE,cAAe;MAC5B,WAAW,EAAC,aAAU;MACtB,KAAK,EAAEJ,QAAS;MAChB,eAAe,EAAE,IAAK;MACtB,YAAY,EAAE,sBAACK,IAAI;QAAA,OAAKJ,WAAW,CAACI,IAAI,CAAC;MAAA;IAAC,EAAG,EAEjD,KAAC,MAAM;MACH,KAAK,EAAEH,KAAK,CAACI,WAAY;MACzB,KAAK,EAAC,UAAU;MAChB,OAAO,EAAE;QAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAAA;IAAC,EACtC;EAAA,EAEL;AAEjB;AAEA,IAAMN,KAAK,GAAGO,UAAU,CAACC,MAAM,CAAC;EAC5BN,cAAc,EAAE;IACZO,aAAa,EAAE,KAAK;IACpBC,eAAe,EAAE,SAAS;IAC1BC,SAAS,EAAE,CAAC;IACZC,KAAK,EAAE,KAAK;IACZC,SAAS,EAAE,QAAQ;IACnBC,OAAO,EAAE;EACb,CAAC;EACDV,WAAW,EAAE;IACTW,QAAQ,EAAE,EAAE;IACZL,eAAe,EAAE,QAAQ;IACzBM,KAAK,EAAE;EACX,CAAC;EACDf,cAAc,EAAE;IACZY,SAAS,EAAE,QAAQ;IACnBI,YAAY,EAAE,QAAQ;IACtBL,KAAK,EAAE,GAAG;IACVF,eAAe,EAAE;EACrB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}